package prodconsum;

import java.util.List;
import java.util.concurrent.ExecutionException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.SwingWorker;

public class myJFrame extends javax.swing.JFrame {

    public myJFrame() {
        initComponents();
    }
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        startB1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        label2 = new javax.swing.JLabel();
        dummyB = new javax.swing.JButton();
        jSlider1 = new javax.swing.JSlider();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        startB1.setText("START");
        startB1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startB1ActionPerformed(evt);
            }
        });

        jLabel1.setText("jLabel1");

        label2.setText("jLabel2");

        dummyB.setText("dummy");
        dummyB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dummyBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(startB1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(dummyB))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel1)
                        .addGap(42, 42, 42)
                        .addComponent(label2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jSlider1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(startB1)
                    .addComponent(dummyB))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(label2))
                .addGap(18, 18, 18)
                .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(200, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    private void startB1ActionPerformed(java.awt.event.ActionEvent evt) {                                        

        /*new Thread(new Runnable() {
            @Override
            public void run() {
                //ha kilep a progi ez is leall
                //Thread.currentThread().setDaemon(true);
                while(true);
            }
        }).start();*/
        
        label2.setText("Running...");
        
        SwingWorker<String,Integer> worker = new SwingWorker<String, Integer>() {

            @Override
            protected String doInBackground() throws Exception {
                matrixMult();
                return "Finished!";
            }
            
            @Override
            protected void process(List<Integer> chunks){
                label2.setText(chunks.get(0)+" %");
                
            }
            
            @Override
            protected void done(){
                try {
                    label2.setText(get());
                } catch (InterruptedException ex) {
                    Logger.getLogger(myJFrame.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ExecutionException ex) {
                    Logger.getLogger(myJFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
            private void matrixMult(){
            //matrixszorzas
            double[][] A = new double[1000][1000];
            double[][] B = new double[1000][1000];
            double[][] C = new double[1000][1000];
            
            //egysegmatrixok inicializalasa
            for(int i=0;i<1000;i++){
                for(int j=0;j<1000;j++){
                    A[i][j]=0;
                    B[i][j]=0;
                    C[i][j]=0;
                }
                A[i][i]=1;
                B[i][i]=1;
            }
            
            //szorzas
            for(int i=0;i<1000;i++){
                for(int j=0;j<1000;j++){
                    double sum=0;
                    for(int k=0;k<1000;k++){
                        sum += A[i][k]*B[k][j];
                    }
                    C[i][j]=sum;                    
                }     
                if ((i%10)==0){
                    publish(i/10 );
                }
            }
        }
            
        };
        worker.execute();
             
    }                                       

    
    
    private void dummyBActionPerformed(java.awt.event.ActionEvent evt) {                                       

    }                                      

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(myJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(myJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(myJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(myJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new myJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton dummyB;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JLabel label2;
    private javax.swing.JButton startB1;
    // End of variables declaration                   
}
